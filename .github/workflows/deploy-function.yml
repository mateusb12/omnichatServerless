name: Deploy Cloud Function

on:
  push:
    branches:
      - main  # Adjust to your main branch name.

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      FIREBASE_SDK_AUTH_URI: ${{ secrets.FIREBASE_SDK_AUTH_URI }}
      FIREBASE_SDK_CLIENT_EMAIL: ${{ secrets.FIREBASE_SDK_CLIENT_EMAIL }}
      FIREBASE_SDK_CLIENT_ID: ${{ secrets.FIREBASE_SDK_CLIENT_ID }}
      FIREBASE_SDK_CLIENT_X509_CERT_URL: ${{ secrets.FIREBASE_SDK_CLIENT_X509_CERT_URL }}
      FIREBASE_SDK_PRIVATE_KEY: ${{ secrets.FIREBASE_SDK_PRIVATE_KEY }}
      FIREBASE_SDK_PRIVATE_KEY_ID: ${{ secrets.FIREBASE_SDK_PRIVATE_KEY_ID }}
      FIREBASE_SDK_PROJECT_ID: ${{ secrets.FIREBASE_SDK_PROJECT_ID }}
      FIREBASE_SDK_TOKEN_URI: ${{ secrets.FIREBASE_SDK_TOKEN_URI }}
      FIREBASE_SDK_TYPE: ${{ secrets.FIREBASE_SDK_TYPE }}
      TEST_SECRET: ${{ secrets.TEST_SECRET }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set Up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.1
        with:
          project_id: ${{ secrets.GCLOUD_PROJECT_ID }}
          service_account_key: ${{ secrets.GCLOUD_SERVICE_ACCOUNT_KEY }}
          export_default_credentials: true

      - name: Set env vars for Cloud Function deployment
        run: |
          PRIVATE_KEY_SANITIZED=$(echo "${FIREBASE_SDK_PRIVATE_KEY}" | sed ':a;N;$!ba;s/\n/\\n/g')
          UPDATE_ENV_VARS_ARG="FIREBASE_SDK_AUTH_URI=${FIREBASE_SDK_AUTH_URI},\
          FIREBASE_SDK_CLIENT_EMAIL=${FIREBASE_SDK_CLIENT_EMAIL},\
          FIREBASE_SDK_CLIENT_ID=${FIREBASE_SDK_CLIENT_ID},\
          FIREBASE_SDK_CLIENT_X509_CERT_URL=${FIREBASE_SDK_CLIENT_X509_CERT_URL},\
          FIREBASE_SDK_PRIVATE_KEY=${PRIVATE_KEY_SANITIZED},\
          FIREBASE_SDK_PRIVATE_KEY_ID=${FIREBASE_SDK_PRIVATE_KEY_ID},\
          FIREBASE_SDK_PROJECT_ID=${FIREBASE_SDK_PROJECT_ID},\
          FIREBASE_SDK_TOKEN_URI=${FIREBASE_SDK_TOKEN_URI},\
          FIREBASE_SDK_TYPE=${FIREBASE_SDK_TYPE},\
          FIREBASE_SDK_AUTH_PROVIDER_X509_CERT_URL=${FIREBASE_SDK_AUTH_PROVIDER_X509_CERT_URL},
          FIREBASE_DATABASE_URL=${FIREBASE_DATABASE_URL}\
          TEST_SECRET=${TEST_SECRET}"
          echo "UPDATE_ENV_VARS_ARG=$UPDATE_ENV_VARS_ARG" >> $GITHUB_ENV
      

      - name: Deploy get_all_conversations Cloud Function
        run: |
          echo "Deploying with env vars: $UPDATE_ENV_VARS_ARG"
          gcloud functions deploy get_all_conversations \
            --source=. \
            --runtime=python39 \
            --entry-point=get_all_conversations \
            --trigger-http \
            --allow-unauthenticated \
            --stage-bucket=firebase_code_bucket \
            --update-env-vars=$UPDATE_ENV_VARS_ARG

      - name: Deploy create_dummy_conversations Cloud Function
        run: |
          echo "Deploying with env vars: $UPDATE_ENV_VARS_ARG"
          gcloud functions deploy create_dummy_conversations \
            --source=. \
            --runtime=python39 \
            --entry-point=create_dummy_conversations \
            --trigger-http \
            --allow-unauthenticated \
            --stage-bucket=firebase_code_bucket \
            --update-env-vars=$UPDATE_ENV_VARS_ARG

      - name: Deploy update_conversation Cloud Function
        run: |
          echo "Deploying with env vars: $UPDATE_ENV_VARS_ARG"
          gcloud functions deploy update_conversation \
            --source=. \
            --runtime=python39 \
            --entry-point=update_conversation \
            --trigger-http \
            --allow-unauthenticated \
            --stage-bucket=firebase_code_bucket \
            --update-env-vars=$UPDATE_ENV_VARS_ARG
